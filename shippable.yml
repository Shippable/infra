resources:
  - name: inf_repo
    type: gitRepo
    integration: "avinci_gh"
    pointer:
      sourceName: "Shippable/infra"
      branch: master

  - name: rc_saas_state
    type: state

  - name: prod_saas_state
    type: state

  - name: prodci_saas_state
    type: state

  # PEM key for AWS RC account
  - name: rc_aws_pem
    type: integration
    integration: aws-rc-pem

  # CREDS for AWS RC account
  - name: rc_aws_key
    type: integration
    integration: aws_rc_access

  # CREDS for AWS PROD account
  - name: prod_aws_key
    type: integration
    integration: aws_prod_access

  # PEM key for AWS PROD account
  - name: prod_aws_pem
    type: integration
    integration: aws-prod-pem

  # CREDS for AWS PROD CI account
  - name: prodci_aws_key
    type: integration
    integration: aws_prod_ci_access

  # PEM key for AWS PROD CI account
  - name: prodci_aws_pem
    type: integration
    integration: aws_prod_ci_pem

jobs:
  - name: rc_saas_inf_prov
    type: runSh
    integrations:
      - aws_rc_cloudwatch_lambda_kv
    steps:
      - IN: rc_aws_pem
        switch: off
      - IN: rc_aws_key
        switch: off
      - IN: rc_saas_state
        switch: off
      - IN: inf_repo
        switch: off
      - TASK:
          script:
            - pushd $(shipctl get_resource_state "inf_repo")
            - ./provision.sh rc saas
            - popd
      - OUT: rc_saas_state
    on_success:
      - script: echo 'SUCCESS!'
    on_failure:
      - script: echo 'FAILURE!'
    always:
      - script: /build/IN/inf_repo/gitRepo/archiveProvisionState.sh rc saas

  - name: prod_saas_inf_prov
    type: runSh
    integrations:
      - aws_prod_cloudwatch_lambda_kv
    steps:
      - IN: prod_aws_pem
        switch: off
      - IN: prod_aws_key
        switch: off
      - IN: prod_saas_state
        switch: off
      - IN: inf_repo
        switch: off
      - TASK:
          runtime:
            options:
              env:
                - TF_VAR_enable_green: true
                - TF_VAR_enable_blue: true
          script:
            - pushd $(shipctl get_resource_state "inf_repo")
            - ./provision.sh prod saas
            - popd
      - OUT: prod_saas_state
    on_success:
      - script: echo 'SUCCESS!'
    on_failure:
      - script: echo 'FAILURE!'
    always:
      - script: /build/IN/inf_repo/gitRepo/archiveProvisionState.sh prod saas

  - name: prodci_saas_inf_prov
    type: runSh
    steps:
      - IN: prodci_aws_pem
        switch: off
      - IN: prodci_aws_key
        switch: off
      - IN: prodci_saas_state
        switch: off
      - IN: inf_repo
        switch: off
      - TASK:
          script:
            - pushd $(shipctl get_resource_state "inf_repo")
            - ./provision.sh prodci saas
            - popd
      - OUT: prodci_saas_state
    on_success:
      - script: echo 'SUCCESS!'
    on_failure:
      - script: echo 'FAILURE!'
    always:
      - script: /build/IN/inf_repo/gitRepo/archiveProvisionState.sh prodci saas
